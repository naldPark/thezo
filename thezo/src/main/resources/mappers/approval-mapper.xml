<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">

	<resultMap id="approvalResult" type="Approval">
		<result column="doc_no" property="docNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="department" property="department"/>
		<result column="form_no" property="formNo"/>
		<result column="dep_no" property="deptNo"/>
		<result column="dep_class" property="depClass"/>
		<result column="doc_name" property="docName"/>
		<result column="category" property="category"/>
		<result column="form_name" property="formName"/>
		<result column="form_info" property="formInfo"/>
		<result column="form_content" property="formContent"/>
		<result column="DOC_CONTENT" property="content"/>
		<result column="STATUS" property="status"/>
		<result column="DOC_DATE" property="docDate"/>
		<result column="line" property="line"/>
		<result column="ref_mem_no" property="refMemNo"/>
		<result column="SORT" property="sort"/>
		<result column="leave_count" property="leaveCount"/>
		<result column="create_date" property="createDate"/>
		
	</resultMap>
	
	<resultMap id="apprAcceptResult" type="ApprovalAccept">
		<result column="line_no" property="lineNo"/>
		<result column="doc_no" property="docNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="dep_no" property="deptNo"/>
		<result column="dep_class" property="depClass"/>
		<result column="department" property="department"/>
		<result column="line_level" property="apprLevel"/>
		<result column="job" property="job"/>
		<result column="rank" property="rank"/>
		<result column="email" property="email"/>
		<result column="type" property="type"/>
		<result column="status" property="status"/>
		<result column="APPR_MEMO" property="memo"/>
		<result column="read" property="read"/>
		<result column="apprDate" property="apprDate"/>
	</resultMap>
	
	<resultMap id="memberResult" type="Member">
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_id" property="memId"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="path" property="path"/>
		<result column="extension_no" property="extensionNo"/>
		<result column="gender" property="gender"/>
		<result column="department" property="department"/>
		<result column="parent_dep" property="parentDep"/>
		<result column="job" property="job"/>
		<result column="rank" property="rank"/>
		<result column="MEM_VAC_DATE" property="memVacDate"/>
		<result column="MEM_USED_DATE" property="memUsedDate"/>
		<result column="MEM_TOTAL_DATE" property="memTotalDate"/>
	</resultMap>
	
	<resultMap id="attachmentResult" type="Attachment">
		<result column="file_no" property="fileNo"/>
		<result column="doc_no" property="docNo"/>
		<result column="FILE_TYPE" property="fileType"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="FILE_URL" property="fileUrl"/>
		<result column="FILE_LEVEL" property="fileLevel"/>
	</resultMap>
	
	
	<select id ="mainApprCount" resultType="map">
		 	 select 
               -- 안읽은 문서(참조)
               (SELECT 
                    count(*)
                FROM reference
                where ref_mem_no = #{memNo}
                and read ='N') referRead,
                 -- 결재대기
                (SELECT count(*)
		        FROM(
		            select DOC_NO, aa.status,mem_no, appr_level current_order_level,mem_name ||' '|| rank SORT
		            ,RANK() OVER (PARTITION BY DOC_NO ORDER BY APPR_LEVEL ASC) AS CURRENT_ORDER
		            from appr_accept aa
		            join member m using(mem_no)
		            where aa.status='대기' or aa.status='반려'
		            order by APPR_level)a
		        WHERE CURRENT_ORDER=1
                and mem_no=#{memNo}
                and a.status='대기') waitingAppr,
                -- 금일 결재완료
               (select count(*)
                   from approval
                   where doc_date = to_char(SYSDATE, 'yyyy-mm-dd')
                   and status='완료'
                   and mem_no = #{memNo}) todayFin,
                -- 금일 반려
                 (select count(*)
                   from approval
                   where doc_date = to_char(SYSDATE, 'yyyy-mm-dd')
                   and status='반려'
                   and mem_no = #{memNo}) todayDenied
            from dual
	</select>
	
	
	<select id="selectListCount" resultType="_int">
			select 
				count(*)
				from vw_approval vw
			 <choose>
				<when test='apprFolder.equals("main")'>
	      	 		 left join ( select doc_no,appr_level
	                			from appr_accept aa
	                			where mem_no = #{memNo})aa on(vw.doc_no = aa.doc_no)
             		-- 관련있는 사람들 전체
             		where inmem_no like '%,' || #{memNo} || ',%'
             		-- 현재 결재선에 도달하지 않은 사람은 제외
             		and (current_order_level &gt;= appr_level
             				or status='완료'
             				or ref_mem_no like '%,' || #{memNo} || ',%'
             				or mem_no =#{memNo})
				</when>
				<otherwise>
					where inmem_no like '%,' || #{memNo} || ',%'
				</otherwise>
		 	 </choose>  
		 	 <if test='searchSDate != null'>
		 			and doc_date between #{searchSDate} and #{searchEDate}
		 	 </if> 
		 	 <if test='category != "전체" and category!=null'>
		 			and category like '%' || #{category} || '%'
		 	 </if> 
                    and doc_name like '%' || #{docName} || '%'
				--상신문서
				<if test='apprFolder.equals("send")'>and mem_no = #{memNo}
				and status != '완료'</if>
				--상신 문서 중 완료문서
				<if test='apprFolder.equals("sendFin")'>and mem_no = #{memNo}
				and status = '완료'</if>
				--임시저장
			  <choose>
				<when test='apprFolder.equals("temp")'>
	      	 		and mem_no = #{memNo}
					and status = '임시'
				</when>
				<otherwise>
					and status != '임시'
				</otherwise>
		 	  </choose>   
				--결재대기
				<if test='apprFolder.equals("waiting")'>and clmem_no = #{memNo}  and status ='대기'</if>
				--결재자가 결재
				<if test='apprFolder.equals("approved")'>and mem_no_fin like '%,' || #{memNo} || ',%'</if>
				--참조
				<if test='apprFolder.equals("refer")'>and ref_mem_no like '%,' || #{memNo} || ',%'</if>
			order by doc_date desc
	</select>
	
	<!-- 메인에 보이는 문서 리스트 조회 -->
	<select id ="selectApprovalMain" resultMap="approvalResult">

			select 
				vw.DOC_NO
			        ,FORM_NO
			        ,MEM_NAME
			        ,MEM_NO
			        ,CURRENT_ORDER_LEVEL
			        ,REF_MEM_NO
			        ,MEM_NO_FIN
			        ,DEPARTMENT
			        ,DOC_NAME
			        ,CATEGORY
			        ,FORM_NAME
			        ,DOC_CONTENT
			        ,DOC_DATE
			        ,STATUS
			        ,LINE
			        ,SORT
				from vw_approval vw
			 <choose>
				<when test='apprFolder.equals("main")'>
	      	 		 left join ( select doc_no,appr_level
	                			from appr_accept aa
	                			where mem_no = #{memNo})aa on(vw.doc_no = aa.doc_no)
             		-- 관련있는 사람들 전체
             		where inmem_no like '%,' || #{memNo} || ',%'
             		-- 현재 결재선에 도달하지 않은 사람은 제외
             		and (current_order_level &gt;= appr_level
             				or status='완료'
             				or ref_mem_no like '%,' || #{memNo} || ',%'
             				or mem_no =#{memNo})
				</when>
				<otherwise>
					where inmem_no like '%,' || #{memNo} || ',%'
				</otherwise>
		 	 </choose>  
		 	 <if test='searchSDate != null'>
		 			and doc_date between #{searchSDate} and #{searchEDate}
		 	 </if> 
		 	 <if test='category != "전체" and category!=null'>
		 			and category like '%' || #{category} || '%'
		 	 </if> 
		 	 <if test='docName!=null'>
                    and doc_name like '%' || #{docName} || '%'
             </if>
			 --상신문서
			 <if test='apprFolder.equals("send")'>
			 		and mem_no = #{memNo}
					and status != '완료'
			</if>
			--상신 문서 중 완료문서
			<if test='apprFolder.equals("sendFin")'>
				and mem_no = #{memNo}
				and status = '완료'
			</if>
			--임시저장
			<choose>
				<when test='apprFolder.equals("temp")'>
	      	 		and mem_no = #{memNo}
					and status = '임시'
				</when>
				<otherwise>
					and status != '임시'
				</otherwise>
		 	 </choose>   
			--결재대기
			<if test='apprFolder.equals("waiting")'>and clmem_no = #{memNo}  and status ='대기'</if>
			--결재자가 결재
			<if test='apprFolder.equals("approved")'>and mem_no_fin like '%,' || #{memNo} || ',%'</if>
			--참조
			<if test='apprFolder.equals("refer")'>and ref_mem_no like '%,' || #{memNo} || ',%'</if>
			order by doc_date desc
			
	</select>
	
	<!-- 메인리스트에 read/unread  -->
	<select id ="selectApprovalRead" resultMap="apprAcceptResult">
        SELECT 
	        	doc_no
	          , mem_no
			  , read
        	FROM appr_accept	
			where mem_no =#{memNo}
			UNION  
	 		SELECT 
		 			doc_no
		          , ref_mem_no mem_no
				  , read
				FROM 
				reference
				where ref_mem_no =#{memNo}
	</select>
	
	<!-- 신규작성을 위한 문서 양식 리스트 갯수 조회  -->
	<select id="newApprListCount" resultType="_int">
		select
			 count(*)
			from appr_form
			where form_name is not null
			<if test='status!=null and status!=""'>
				and status like #{status}
			</if>
			<if test='category!=null and category!="전체"'>
				and category=#{category}
			</if>
			<if test='formName!=null and formName!=""'>
			and form_name like '%' || #{formName} || '%'
			</if>
	</select>
	
	<!-- 신규작성을 위한 문서 양식 리스트 조회  -->
	<select id="newApprList" resultMap="approvalResult">
		select FORM_NO, CATEGORY, FORM_NAME, FORM_INFO, status
			from appr_form
			where form_name is not null
			<if test='status!=null and status!=""'>
				and status like #{status}
			</if>
			<if test='category!=null and category!="전체"'>
				and category=#{category}
			</if>
			<if test='formName!=null and formName!=""'>
			and form_name like '%' || #{formName} || '%'
			</if>
	</select>
	
	<!-- 신규작성 페이지  -->
	<select id="enrollApproval" resultMap="approvalResult">
		select 
				  form_no
				, category
				, form_info
				, form_name
				, form_content
				,TO_CHAR(create_date, 'YYYY-MM-DD') create_date
				,status
			from appr_form
			where form_no =#{formNo}
			
	</select>

	<!-- 결재라인 조회를 위한 전사원 리스트  -->
	<select id="employeeList" resultMap="memberResult">
		select mem_no, mem_name, EMAIL, dep_class,dep_no, department, parent_dep, job, rank, extension_no, phone, path, mem_id
			from member
            join department using(dep_no)
			where status IN ('A', 'Y')
				and resign_date is null
			order by DEP_class
	            ,JOB NULLS LAST
	            ,decode(rank,'대표이사',1,'상무',2,'부장',3,'과장',4,'대리',5)
	            ,mem_name
	</select>
	
	<!-- 특정유저의 특정양식 결재선 커스텀이 없는경우 default값 조회  -->
	<select id="defaultLine" resultMap="apprAcceptResult">
	
        select rownum as line_level, mem_no, mem_name, EMAIL, dep_class, department, job, rank, '결재' "type"
         	from (
       		                select rownum as num, a.*
                    from (
                            select mem_no, mem_name, EMAIL, dep_class, department, job, rank,par_dep_class
                                from member
                                     join department using(dep_no)
                                     where dep_class = (select par_dep_class
                                                     from department
                                                     where dep_class=#{depClass})
                                   or dep_class =  (select par_dep_class
				                                     from department
				                                     where dep_class=(select par_dep_class
			                                                       from department
			                                                        where dep_class=#{depClass}))
                                   or dep_class=#{depClass}
                                   and job is not null
                                   order by  decode(rank,'대표이사',1,'상무',2,'부장',3,'과장',4,'대리',5))a
                   where mem_no !=#{memNo}
                   order by num desc)
        order by line_level
	</select>
	
	<!-- 특정유저의 특정양식 결재선 커스텀 조회 -->
	<select id="customLine" resultMap="apprAcceptResult">
		select 
			  form_no docNo
			, mem_no2 mem_no
			, mem_name
			, line_level
			, type
			, EMAIL
			, dep_no
			, department
			, job
			, rank
		from appr_line al
          join member m on( al.mem_no2=m.mem_no)
		where al.mem_no =#{memNo}
		 and form_no=#{formNo}
          order by line_level
	</select>
	
	<!-- 기안한 양식 insert -->
	<insert id="insertApproval">
		INSERT
			  INTO approval
			  (
			    DOC_NO
			  , MEM_NO  
			  , FORM_NO
			  , DOC_NAME
			  , DOC_CONTENT
			  )
			  VALUES
			  (
			    SEQ_APNO.NEXTVAL
			  , #{memNo}
			  , #{formNo}
			  , #{docName}
			  , #{content}
			  )
	</insert>

	<!-- 새롭게 저장된 특정양식의 특정유저의 결재선 초기화 -->
	<delete id="deleteExsitedCustomLine">
	
		DELETE FROM appr_line
			WHERE mem_no = #{memNo}
			and form_no=#{formNo}
	
	</delete>

	<!-- 새롭게 저장된 특정양식의 특정유저의 결재선-->
	<update id="insertNewCustomLine" parameterType="java.util.List">
		<foreach collection="apAccept" item="a" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" "> 
			INTO appr_line
		      (
		        FORM_NO
		      , MEM_NO  
		      , MEM_NO2
		      , LINE_LEVEL
		      , TYPE
		      )
			VALUES 
				(
				#{formNo}
		      , #{memNo}
		      , #{a.memNo}
		      , #{a.apprLevel}
		      , #{a.type}
			  ) 
			</foreach> 
	</update>

	<!-- 기안한 문서의 결재선 -->
	<update id="insertSpecificDocuLine" parameterType="java.util.List">
		INSERT into appr_accept
			      (
			          LINE_NO
			        , DOC_NO
			        , MEM_NO
			        , APPR_LEVEL
			        , TYPE
			      )
    	SELECT SEQ_LINO.NEXTVAL, SEQ_APNO.CURRVAL, A.* 
    	FROM(
		<foreach collection="apAccept" item="a" separator="UNION ALL"> 
			       select 
			       #{a.memNo}  as memNo
			      , #{a.apprLevel} as apprLevel
			      , #{a.type} as type
			      FROM DUAL
		</foreach> ) A
	</update>
	
	<!-- 기안한 문서의 첨부파일 -->
	<update id="insertDocuAttachment" parameterType="java.util.List">
		INSERT
		      INTO ma_attach
			      (
		          FILE_NO
		        , DOC_NO
		        , FILE_TYPE
		        , ORIGIN_NAME
		        , FILE_URL
		        , FILE_LEVEL
		      	)
    	SELECT 
    			SEQ_AANO.NEXTVAL
		      , SEQ_APNO.CURRVAL
		      , A.* 
    	FROM(
		<foreach collection="at" item="at" separator="UNION ALL"> 
			       select 
			       '전자결재' as fileType
			      , #{at.originName} as originName
			      , #{at.fileUrl} as fileUrl
			      , #{at.fileLevel} as fileLevel
			      FROM DUAL
		</foreach> ) A
	</update>
	
	
	<!-- 기안한 문서의 참조자 -->
	<update id="reference" >
		INSERT
		      INTO reference
		      (
		        REF_NO
				, DOC_NO
				, REF_MEM_NO
		      )
    	SELECT 
    			SEQ_ARNO.NEXTVAL
		      , SEQ_APNO.CURRVAL
		      , A.* 
    	FROM(
		<foreach collection="refMemNoAry" item="item" separator="UNION ALL" > 
			       select 
			       #{item} as memNo
			      FROM DUAL
		</foreach> ) A
	</update> 
	
	
	
	
	<!-- 기안한 문서가 연차신청서인 경우의 입력 -->
	<insert id="insertLeaveDocu">
		INSERT
		      INTO leave
		      (
		         DOC_NO
		        ,MEM_NO
		        ,START_DATE
		        ,END_DATE
		        ,LEAVE_COUNT
		        ,LEAVE_CATE
		        ,LEAVE_CONTENT
		      )
		      VALUES
		      (
		        SEQ_APNO.CURRVAL
		      , #{memNo}
		      , #{startDate}
		      , #{endDate}
		      , #{leaveCount}
		      , #{leaveCategory}
		      , #{formContent}
		      )
		</insert>
		
	<!-- 기안한 문서가 연차신청서인 경우 조회 -->
	<select id="selectLeave" resultMap="memberResult">
		select MEM_VAC_DATE, MEM_TOTAL_DATE
			from member
			where mem_no=#{memNo}
	</select>
	
	<!-- 기안한 문서가 연차신청서인 경우 MEMBER에 업데이트 -->
	<update id="updateLeaveDocu">
		update member
			set
			MEM_USED_DATE = MEM_USED_DATE+#{leaveCount}
			,MEM_TOTAL_DATE =MEM_TOTAL_DATE-#{leaveCount}
		where mem_no = #{memNo}
	</update>
	
	
	
	<!-- 문서세부조회 -->
	<select id="detailApproval" resultMap="approvalResult">
	select 
		form_no
	  , a.doc_no
	  , a.mem_no
	  , mem_name ||' '|| m.rank mem_name
	  , m.department
	  , doc_name
	  , refer_mem ref_mem_no
	  , doc_content
	  , a.status
	  , doc_date
	  , category
	  , form_name,sort
			from approval a
			join appr_form using(form_no)
            join member m on(a.mem_no = m.mem_no)
			full join 
			    (   SELECT doc_no, LISTAGG(DEPARTMENT||' '||MEM_NAME||' '||RANK,' / ') WITHIN GROUP (ORDER BY doc_no) AS refer_mem
			        FROM reference 
                    join member on(mem_no = ref_mem_no)
			        GROUP BY doc_no)r on(a.doc_no=r.doc_no)
             full JOIN(
		        SELECT *
		        FROM(
		            select DOC_NO, mem_no SORT
		            ,RANK() OVER (PARTITION BY DOC_NO ORDER BY APPR_LEVEL ASC) AS RANK
		            from appr_accept aa
		            join member m using(mem_no)
		            where aa.status='대기'
                    and doc_no=#{docNo}
		            order by APPR_level)
		        WHERE RANK=1
		        ) CURRENT_LEVEL ON(a.DOC_NO = CURRENT_LEVEL.DOC_NO)        
			where a.doc_no= #{docNo}
	</select>
	
	<!-- 문서세부조회 -->
	<select id="detailApprovalAt" resultMap="attachmentResult">
				select 
					    FILE_NO
					   ,DOC_NO
					   ,FILE_TYPE
					   ,ORIGIN_NAME
					   ,FILE_URL
					   ,FILE_LEVEL
					from ma_attach
					where doc_no=#{docNo}
					and file_type='전자결재'
	</select>
	
	
	<!-- 문서세부결재라인조회 -->
	<select id="detailApprovalLine" resultMap="apprAcceptResult">
		select 
			doc_no
			, mem_no
			, MEM_NAME
			, JOB
			, RANK
			, department
			, appr_level
			, type||aa.status STATUS
			, read
			, appr_date
			, APPR_MEMO
				from appr_accept aa
				join member m using(mem_no)
				where doc_no=#{docNo}
				order by appr_level
	</select>
	
	<!-- 전자결재 승인 -->
	<update id="approveDocu">
		update appr_accept
			set
			status = #{status}
			,appr_memo=#{memo}
			,appr_date=sysdate
		where doc_no = #{docNo}
		and mem_no = #{memNo}
	</update>
	
	<update id="setApprovalStatus">
		update approval
			set
			 status = #{status}
			where doc_no = #{docNo}
	</update>
	
	
	<!-- 연차신청서에 대해 승인/반려 하는경우 연차테이블 status변경 (미승인, 결재완료시 '승인', 반려시 '반려')-->
	<update id="updateLeaveStatus">
		update leave
			set
		leave_status = #{status}
		where doc_no = #{docNo}
	</update>
	
	<!-- 연차신청서에 대해 반려 하는경우 해당문서에서 차감된 연차확인 -->
	<select id="selectLeaveCount" resultMap="approvalResult">
	select mem_no, leave_count
		from leave
		where doc_no= #{docNo}
	</select>
	
	<!-- 연차신청서에 대해 반려 하는경우 member테이블 연차 갯수 원상복구-->
	<update id="updateLeaveCount">
		update member
			set
			MEM_USED_DATE = MEM_USED_DATE-#{leaveCount}
		    ,MEM_TOTAL_DATE =MEM_TOTAL_DATE+#{leaveCount}
		where mem_no = #{memNo}
	</update>
	
	<!-- 결재대상자가 읽은 경우 읽음으로 표시 -->
	<update id="detailApprovalReadUpdate">
		update appr_accept
			set
			 read = 'Y'
			where doc_no = #{docNo}
			and mem_no = #{memNo}
			
	</update>
	
	<!-- 참조자가 읽은 경우 읽음으로 표시 -->
	<update id="detailReferenceReadUpdate">
		update reference
             set 
              READ ='Y'
             where doc_no = #{docNo}
             and REF_MEM_NO = #{memNo} 
	</update>
	
	<!-- 관리자 양식 등록 insert -->
	<insert id="insertNewDocument">
				INSERT
		      INTO APPR_FORM
		      (
		        FORM_NO
				,CATEGORY
				,FORM_NAME
				,FORM_INFO
				,FORM_CONTENT
				,CREATE_DATE
				,STATUS
		      )
		      VALUES
		      (
		        SEQ_FONO.NEXTVAL
		      , #{category}
		      , #{formName}
		      , #{formInfo}
		      , #{formContent}
		      , sysdate
		      , #{status}
		      )
	</insert>
	
	<!-- 관리자 양식 update -->
	<update id="editNewDocument">
			update APPR_FORM
				set
			     CATEGORY = #{category}
			    ,FORM_NAME=#{formName}
			    ,FORM_INFO=#{formInfo}
			    ,FORM_CONTENT=#{formContent}
				,CREATE_DATE=sysdate
				,status=#{status}
			where form_no = #{formNo}
	</update>
	
	<!-- 관리자 양식 delete -->
	<delete id="deleteForm">
			DELETE FROM appr_form
			WHERE form_no = #{formNo}
	</delete>
	
	<!-- 관리자 결재 문서 관리 count -->
		<select id ="adminAllListCount" resultType="_int">
				select 
					count(*)
				from vw_approval vw
			where status like '%' ||#{status} || '%'
			<if test='searchSDate != null'>
		 			and doc_date between #{searchSDate} and #{searchEDate}
		 	 </if> 
		 	 <if test='category != "전체" and category!=null'>
		 			and category like '%' || #{category} || '%'
		 	 </if> 
		 	 <if test='docName!=null'>
                    and doc_name like '%' || #{docName} || '%'
             </if> 
	</select>
	
	<!-- 관리자 결재 문서 관리 select -->
		<select id ="adminAllList" resultMap="approvalResult">
				select 
				vw.DOC_NO
			        ,FORM_NO
			        ,MEM_NAME
			        ,MEM_NO
			        ,CURRENT_ORDER_LEVEL
			        ,REF_MEM_NO
			        ,MEM_NO_FIN
			        ,DEPARTMENT
			        ,DOC_NAME
			        ,CATEGORY
			        ,FORM_NAME
			        ,DOC_CONTENT
			        ,DOC_DATE
			        ,STATUS
			        ,LINE
			        ,SORT
				from vw_approval vw
			where status like '%' ||#{status} || '%'
			<if test='searchSDate != null'>
		 			and doc_date between #{searchSDate} and #{searchEDate}
		 	 </if> 
		 	 <if test='category != "전체" and category!=null'>
		 			and category like '%' || #{category} || '%'
		 	 </if> 
		 	 <if test='docName!=null'>
                    and doc_name like '%' || #{docName} || '%'
             </if> 
             order by doc_date desc
	</select>
	
</mapper>
